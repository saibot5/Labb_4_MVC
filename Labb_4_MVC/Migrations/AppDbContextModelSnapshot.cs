// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Labb_4_MVC.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Labb_4_MVC.Models.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = new Guid("359ef01e-5294-4773-a59a-5b2677bfdcc3"),
                            Author = "C.S.Lewis",
                            Description = "ett lejon och en häxa i garderoben",
                            Title = "Narnia"
                        },
                        new
                        {
                            Id = new Guid("5dbffa4c-6956-4cd2-8606-86d59a0c666a"),
                            Author = "Tolkien",
                            Description = "två stora torn",
                            Title = "Two Towers"
                        },
                        new
                        {
                            Id = new Guid("bf55ef41-5174-44ad-af48-cf6a7a03aa3f"),
                            Author = "Tolkien",
                            Description = "Magisk ring",
                            Title = "Lord of the rings"
                        });
                });

            modelBuilder.Entity("Labb_4_MVC.Models.BorrowedBook", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BorrowedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsReturned")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CustomerId");

                    b.ToTable("BorrowedBook");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fa737607-6f55-4608-a301-3d447422de5b"),
                            BookId = new Guid("bf55ef41-5174-44ad-af48-cf6a7a03aa3f"),
                            BorrowedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(2022),
                            CustomerId = new Guid("fb756fa6-afcb-4163-940f-039877239b34"),
                            IsReturned = true,
                            ReturnDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(2013)
                        },
                        new
                        {
                            Id = new Guid("8c9a0fb0-274e-494e-be52-7cc58de22bbb"),
                            BookId = new Guid("359ef01e-5294-4773-a59a-5b2677bfdcc3"),
                            BorrowedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(2022),
                            CustomerId = new Guid("8c9a0fb0-274e-494e-be52-7cc58de22bbd"),
                            IsReturned = false,
                            ReturnDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(2012)
                        },
                        new
                        {
                            Id = new Guid("e58f7808-f945-40b6-bede-d3e1daba6b08"),
                            BookId = new Guid("5dbffa4c-6956-4cd2-8606-86d59a0c666a"),
                            BorrowedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(2016),
                            CustomerId = new Guid("fb756fa6-afcb-4163-940f-039877239b34"),
                            IsReturned = false,
                            ReturnDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1999)
                        });
                });

            modelBuilder.Entity("Labb_4_MVC.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fb756fa6-afcb-4163-940f-039877239b34"),
                            Email = "adam@mail.com",
                            FullName = "Adam Ask",
                            PhoneNumber = "123456",
                            age = 23
                        },
                        new
                        {
                            Id = new Guid("8c9a0fb0-274e-494e-be52-7cc58de22bbd"),
                            Email = "Bertil@mail.com",
                            FullName = "Bertil Bok",
                            PhoneNumber = "312453",
                            age = 32
                        },
                        new
                        {
                            Id = new Guid("3d14e96d-5526-492b-8494-c0b7b65ba2b0"),
                            Email = "Berit@mail.com",
                            FullName = "Berit Bok",
                            PhoneNumber = "634523",
                            age = 33
                        });
                });

            modelBuilder.Entity("Labb_4_MVC.Models.BorrowedBook", b =>
                {
                    b.HasOne("Labb_4_MVC.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb_4_MVC.Models.Customer", "Customer")
                        .WithMany("BorrowedBook")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Labb_4_MVC.Models.Customer", b =>
                {
                    b.Navigation("BorrowedBook");
                });
#pragma warning restore 612, 618
        }
    }
}
